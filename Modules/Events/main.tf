resource "aws_cloudwatch_event_bus" "ec2_manager_msg_bus" {
  name = "ec2-manager-msg-bus"
}

resource "aws_cloudwatch_event_rule" "manager_msg" {
  name        = "capture-ec2-manager-events"
  description = "Capture events sent by ec2Manager role events"
  event_bus_name = aws_cloudwatch_event_bus.ec2_manager_msg_bus.name

  event_pattern = <<EOF
{
  "source": ["ec2.manager"]
}
EOF
}

resource "aws_cloudwatch_event_target" "sns" {
  rule      = aws_cloudwatch_event_rule.manager_msg.name
  target_id = "SendToSNS"
  arn       = aws_sns_topic.ec2_manager_updates.arn
  event_bus_name = aws_cloudwatch_event_bus.ec2_manager_msg_bus.name

  input_transformer {
    input_paths = {
      time = "$.detail.time",
      script = "$.detail.script",
      step = "$.detail.step",
      message = "$.detail.message",
    }
    input_template = "\"This is a new AWS event generated by load pipeline at <time>.\"\n\n\" ---- \"\n\n\" Info:\"\n\n\"The script <script> has reached the step <step>.\"\n\n\"Further details:\"\n\n\"<message>\""
  }
}

resource "aws_sns_topic" "ec2_manager_updates" {
  name            = "ec2-manager-updates-topic"
/*  delivery_policy = <<EOF
{
  "http": {
    "defaultHealthyRetryPolicy": {
      "minDelayTarget": 20,
      "maxDelayTarget": 20,
      "numRetries": 3,
      "numMaxDelayRetries": 0,
      "numNoDelayRetries": 0,
      "numMinDelayRetries": 0,
      "backoffFunction": "linear"
    },
    "disableSubscriptionOverrides": false,
    "defaultThrottlePolicy": {
      "maxReceivesPerSecond": 1
    }
  }
}
EOF*/
}

resource "aws_sns_topic_subscription" "ec2_manager_updates_sns_subscription" {
  topic_arn = aws_sns_topic.ec2_manager_updates.arn
  protocol  = "email"
  endpoint  = "p.fdez.s.90@gmail.com"
}


resource "aws_sns_topic_policy" "default" {
  arn    = aws_sns_topic.ec2_manager_updates.arn
  policy = data.aws_iam_policy_document.sns_topic_policy.json
}

data "aws_iam_policy_document" "sns_topic_policy" {
  statement {
    effect  = "Allow"
    actions = ["SNS:Publish"]

    principals {
      type        = "Service"
      identifiers = ["events.amazonaws.com"]
    }

    resources = [aws_sns_topic.ec2_manager_updates.arn]
  }
}